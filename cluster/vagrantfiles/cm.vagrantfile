# -*- mode: ruby -*-
# vi: set ft=ruby :

#######################################################################

# Load configuration file
config_file = 'vagrantfiles/config.yaml'

if File.exists?(config_file)
  config = YAML.load_file(config_file)
  # p config.inspect
else
  puts "WARNING: Configuration file (#{config_file}) was NOT found!"
end

#######################################################################

servers = config['nodes']['cm']

Vagrant.configure("2") do |config|  
  servers.each do |machine|

    # Configure the virtual machines
    config.vm.define machine['hostname'] do |node|
      node.vm.box = machine['box']
      node.vm.hostname = machine['hostname']
      node.vm.network "public_network", ip: machine['ip']
      # node.ssh.username = 'vagrant'
      # node.ssh.password = 'vagrant'
      # node.ssh.insert_key = true
      config.vm.synced_folder ".", "/vagrant", type: "virtualbox"

      # Define Virtualbox related values
      node.vm.provider "virtualbox" do |vb|
        vb.name = machine['hostname']
        vb.cpus = machine['cpu'] 
        vb.memory = machine['ram'] 
        vb.gui = false
      end

      # Provision the virtual machine
      ################################################################

      ## COMMON

      config.vm.provision 'common', run: 'always', type: :ansible_local do |ansible|
        ansible.galaxy_roles_path = 'ansible/roles'
        ansible.playbook = './ansible/common.yml'
        # ansible.sudo = true
        # ansible.verbose = true
      end

      ## CONDOR

      config.vm.provision 'condor_cm', run: 'always', type: :ansible_local do |ansible|
        ansible.galaxy_roles_path = 'ansible/roles'
        ansible.playbook = './ansible/condor_cm.yml'
      end

      # ## SLURM (WIP)

      # config.vm.provision 'munge_main', run: 'always', type: :ansible_local do |ansible|
      #   ansible.galaxy_roles_path = 'ansible/roles'
      #   ansible.playbook = './ansible/munge_main.yml'
      # end

      ################################################################
      # /Provision the virtual machine
    end
  end
end